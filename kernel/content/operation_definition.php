<?php
/**
 * @copyright Copyright (C) eZ Systems AS. All rights reserved.
 * @license For full copyright and license information view LICENSE file distributed with this source code.
 * @version //autogentag//
 * @package kernel
 */

$OperationList = [];
$OperationList['read'] = ['name' => 'read', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'user_id', 'type' => 'integer', 'required' => true], ['name' => 'language_code', 'type' => 'string', 'default' => '', 'required' => false]], 'keys' => ['node_id', 'user_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_read', 'keys' => ['node_id', 'user_id']], ['type' => 'trigger', 'name' => 'post_read', 'keys' => ['node_id', 'user_id']], ['type' => 'method', 'name' => 'fetch-object', 'frequency' => 'once', 'method' => 'readObject']]];

$OperationList['publish'] = ['name' => 'publish', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]], 'on-interrupt' => ['type' => 'method', 'name' => 'commit-transaction', 'frequency' => 'once', 'method' => 'commitTransaction'], 'body' => [
    ['type' => 'method', 'name' => 'begin-transaction', 'frequency' => 'once', 'method' => 'beginTransaction'],
    ['type' => 'method', 'name' => 'set-version-pending', 'frequency' => 'once', 'method' => 'setVersionStatus', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true], ['name' => 'status', 'type' => 'integer', 'constant' => eZContentObjectVersion::STATUS_PENDING]]],
    ['type' => 'method', 'name' => 'send-to-publishing-queue', 'frequency' => 'once', 'method' => 'sendToPublishingQueue', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]]],
    ['type' => 'method', 'name' => 'update-section-id', 'frequency' => 'once', 'method' => 'updateSectionID'],
    ['type' => 'trigger', 'name' => 'pre_publish', 'keys' => ['object_id', 'version']],
    ['type' => 'method', 'name' => 'copy-translations', 'frequency' => 'once', 'method' => 'copyTranslations'],
    ['type' => 'method', 'name' => 'set-version-archived', 'frequency' => 'once', 'method' => 'setVersionStatus', 'parameters' => [
        ['name' => 'object_id', 'type' => 'integer', 'required' => true],
        ['name' => 'version', 'type' => 'integer', 'constant' => false],
        // false means current version
        ['name' => 'status', 'type' => 'integer', 'constant' => eZContentObjectVersion::STATUS_ARCHIVED],
    ]],
    [
        'type' => 'loop',
        'name' => 'loop-nodes',
        'method' => 'loopNodeAssignment',
        'continue_operation' => 'all',
        // 'one', 'none'
        'child_parameters' => [['name' => 'parent_node_id', 'type' => 'integer', 'required' => true], ['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true], ['name' => 'main_node_id', 'type' => 'integer', 'required' => true]],
        'children' => [['type' => 'method', 'name' => 'publish-node', 'frequency' => 'always', 'method' => 'publishNode']],
    ],
    ['type' => 'method', 'name' => 'set-version-published', 'frequency' => 'once', 'method' => 'setVersionStatus', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true], ['name' => 'status', 'type' => 'integer', 'constant' => eZContentObjectVersion::STATUS_PUBLISHED]]],
    ['type' => 'method', 'name' => 'set-object-published', 'frequency' => 'once', 'method' => 'setObjectStatusPublished', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]]],
    ['type' => 'method', 'name' => 'publish-object-extension-handler', 'frequency' => 'once', 'method' => 'publishObjectExtensionHandler', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]]],
    ['type' => 'method', 'name' => 'remove-old-nodes', 'frequency' => 'once', 'method' => 'removeOldNodes'],
    ['type' => 'method', 'name' => 'attribute-publish-action', 'frequency' => 'once', 'method' => 'attributePublishAction', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]]],
    ['type' => 'method', 'name' => 'update-nontranslatable-attributes', 'frequency' => 'once', 'method' => 'updateNontranslatableAttributes'],
    ['type' => 'method', 'name' => 'reset-nodeassignment-opcodes', 'frequency' => 'once', 'method' => 'resetNodeassignmentOpcodes'],
    ['type' => 'method', 'name' => 'commit-transaction', 'frequency' => 'once', 'method' => 'commitTransaction'],
    ['type' => 'method', 'name' => 'clear-object-view-cache', 'frequency' => 'once', 'method' => 'clearObjectViewCache', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'version', 'type' => 'integer', 'required' => true]]],
    // PreGeneration: This generates view cache for a given set of users if enabled
    ['type' => 'method', 'name' => 'generate-object-view-cache', 'frequency' => 'once', 'method' => 'generateObjectViewCache', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true]]],
    ['type' => 'method', 'name' => 'register-search-object', 'frequency' => 'once', 'method' => 'registerSearchObject'],
    ['type' => 'method', 'name' => 'create-notification', 'frequency' => 'once', 'method' => 'createNotificationEvent'],
    ['type' => 'method', 'name' => 'remove-temporary-drafts', 'frequency' => 'once', 'method' => 'removeTemporaryDrafts'],
    ['type' => 'trigger', 'name' => 'post_publish', 'keys' => ['object_id', 'version']],
]];

$OperationList['move'] = ['name' => 'move', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'new_parent_node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id', 'object_id', 'new_parent_node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_move', 'keys' => ['node_id', 'object_id', 'new_parent_node_id']], ['type' => 'method', 'name' => 'move-node', 'frequency' => 'once', 'method' => 'moveNode'], ['type' => 'trigger', 'name' => 'post_move', 'keys' => ['node_id', 'object_id', 'new_parent_node_id']]]];

$OperationList['addlocation'] = ['name' => 'addlocation', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'select_node_id_array', 'type' => 'array', 'required' => true]], 'keys' => ['node_id', 'object_id', 'select_node_id_array'], 'body' => [['type' => 'trigger', 'name' => 'pre_addlocation', 'keys' => ['node_id', 'object_id', 'select_node_id_array']], ['type' => 'method', 'name' => 'add-location', 'frequency' => 'once', 'method' => 'addAssignment'], ['type' => 'trigger', 'name' => 'post_addlocation', 'keys' => ['node_id', 'object_id', 'select_node_id_array']]]];

$OperationList['removelocation'] = ['name' => 'removelocation', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_list', 'type' => 'array', 'required' => true]], 'keys' => ['node_list'], 'body' => [['type' => 'trigger', 'name' => 'pre_removelocation', 'keys' => ['node_list']], ['type' => 'method', 'name' => 'remove-location', 'frequency' => 'once', 'method' => 'removeNodes'], ['type' => 'trigger', 'name' => 'post_removelocation', 'keys' => ['node_list']]]];

$OperationList['delete'] = ['name' => 'delete', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id_list', 'type' => 'array', 'required' => true], ['name' => 'move_to_trash', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id_list', 'move_to_trash'], 'body' => [['type' => 'trigger', 'name' => 'pre_delete', 'keys' => ['node_id_list', 'move_to_trash']], ['type' => 'method', 'name' => 'delete', 'frequency' => 'once', 'method' => 'deleteObject'], ['type' => 'trigger', 'name' => 'post_delete', 'keys' => ['node_id_list', 'move_to_trash']]]];

$OperationList['hide'] = ['name' => 'hide', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_hide', 'keys' => ['node_id']], ['type' => 'method', 'name' => 'hide', 'frequency' => 'once', 'method' => 'changeHideStatus'], ['type' => 'trigger', 'name' => 'post_hide', 'keys' => ['node_id']]]];

$OperationList['swap'] = ['name' => 'swap', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'selected_node_id', 'type' => 'integer', 'required' => true], ['name' => 'node_id_list', 'type' => 'array', 'required' => true]], 'keys' => ['node_id', 'selected_node_id', 'node_id_list'], 'body' => [['type' => 'trigger', 'name' => 'pre_swap', 'keys' => ['node_id_list']], ['type' => 'method', 'name' => 'swap', 'frequency' => 'once', 'method' => 'swapNode'], ['type' => 'trigger', 'name' => 'post_swap', 'keys' => ['node_id_list']]]];

$OperationList['updatesection'] = ['name' => 'updatesection', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'selected_section_id', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id', 'selected_section_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_updatesection', 'keys' => ['node_id', 'selected_section_id']], ['type' => 'method', 'name' => 'updatesection', 'frequency' => 'once', 'method' => 'updateSection'], ['type' => 'trigger', 'name' => 'post_updatesection', 'keys' => ['node_id', 'selected_section_id']]]];
$OperationList['translationavailable'] = ['name' => 'translationavailable', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'status', 'type' => 'integer', 'required' => false]], 'keys' => ['object_id', 'status'], 'body' => [['type' => 'trigger', 'name' => 'pre_translationavailable', 'keys' => ['object_id', 'status']], ['type' => 'method', 'name' => 'translationavailable', 'frequency' => 'once', 'method' => 'changeTranslationAvailableStatus'], ['type' => 'trigger', 'name' => 'post_translationavailable', 'keys' => ['object_id']]]];

$OperationList['sort'] = ['name' => 'sort', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'sorting_field', 'type' => 'integer', 'required' => true], ['name' => 'sorting_order', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id', 'sorting_field', 'sorting_order'], 'body' => [['type' => 'trigger', 'name' => 'pre_sort', 'keys' => ['node_id']], ['type' => 'method', 'name' => 'sort', 'frequency' => 'once', 'method' => 'changeSortOrder'], ['type' => 'trigger', 'name' => 'post_sort', 'keys' => ['node_id']]]];

$OperationList['updatepriority'] = ['name' => 'updatepriority', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true], ['name' => 'priority', 'type' => 'array', 'required' => true], ['name' => 'priority_id', 'type' => 'array', 'required' => true]], 'keys' => ['node_id', 'priority', 'priority_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_updatepriority', 'keys' => ['node_id']], ['type' => 'method', 'name' => 'updatepriority', 'frequency' => 'once', 'method' => 'updatePriority'], ['type' => 'trigger', 'name' => 'post_updatepriority', 'keys' => ['node_id']]]];

$OperationList['updatemainassignment'] = ['name' => 'updatemainassignment', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'main_assignment_id', 'type' => 'integer', 'required' => true], ['name' => 'object_id', 'type' => 'array', 'required' => true], ['name' => 'main_assignment_parent_id', 'type' => 'array', 'required' => true]], 'keys' => ['main_assignment_id', 'object_id', 'main_assignment_parent_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_updatemainassignment', 'keys' => ['main_assignment_id']], ['type' => 'method', 'name' => 'updatemainassignment', 'frequency' => 'once', 'method' => 'updateMainAssignment'], ['type' => 'trigger', 'name' => 'post_updatemainassignment', 'keys' => ['main_assignment_id']]]];

$OperationList['updateinitiallanguage'] = ['name' => 'updateinitiallanguage', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'new_initial_language_id', 'type' => 'integer', 'required' => true], ['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['object_id', 'new_initial_language_id', 'node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_updateinitiallanguage', 'keys' => ['object_id', 'new_initial_language_id', 'node_id']], ['type' => 'method', 'name' => 'updateinitiallanguage', 'frequency' => 'once', 'method' => 'updateInitialLanguage'], ['type' => 'trigger', 'name' => 'post_updateinitiallanguage', 'keys' => ['object_id', 'new_initial_language_id', 'node_id']]]];

$OperationList['updatealwaysavailable'] = ['name' => 'updatealwaysavailable', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'new_always_available', 'type' => 'integer', 'required' => true], ['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['object_id', 'new_always_available', 'node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_updatealwaysavailable', 'keys' => ['object_id', 'new_always_available']], ['type' => 'method', 'name' => 'updatealwaysavailable', 'frequency' => 'once', 'method' => 'updateAlwaysAvailable'], ['type' => 'trigger', 'name' => 'post_updateAlwaysAvailable', 'keys' => ['object_id', 'new_always_available', 'node_id']]]];

$OperationList['removetranslation'] = ['name' => 'removetranslation', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'language_id_list', 'type' => 'array', 'required' => true], ['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['object_id', 'language_id_list', 'node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_removetranslation', 'keys' => ['object_id', 'language_id_list', 'node_id']], ['type' => 'method', 'name' => 'removetranslation', 'frequency' => 'once', 'method' => 'removeTranslation'], ['type' => 'trigger', 'name' => 'post_removetranslation', 'keys' => ['object_id', 'language_id_list', 'node_id']]]];

$OperationList['updateobjectstate'] = ['name' => 'updateobjectstate', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'object_id', 'type' => 'integer', 'required' => true], ['name' => 'state_id_list', 'type' => 'array', 'required' => true]], 'keys' => ['object_id', 'state_id_list'], 'body' => [['type' => 'trigger', 'name' => 'pre_updateobjectstate', 'keys' => ['object_id', 'state_id_list']], ['type' => 'method', 'name' => 'updateobjectstate', 'frequency' => 'once', 'method' => 'updateObjectState'], ['type' => 'trigger', 'name' => 'post_updateobjectstate', 'keys' => ['object_id', 'state_id_list']]]];

$OperationList['createnodefeed'] = ['name' => 'createnodefeed', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_createnodefeed', 'keys' => ['node_id']], ['type' => 'method', 'name' => 'createnodefeed', 'frequency' => 'once', 'method' => 'createFeedForNode'], ['type' => 'trigger', 'name' => 'post_createnodefeed', 'keys' => ['node_id']]]];

$OperationList['removenodefeed'] = ['name' => 'removenodefeed', 'default_call_method' => ['include_file' => 'kernel/content/ezcontentoperationcollection.php', 'class' => 'eZContentOperationCollection'], 'parameter_type' => 'standard', 'parameters' => [['name' => 'node_id', 'type' => 'integer', 'required' => true]], 'keys' => ['node_id'], 'body' => [['type' => 'trigger', 'name' => 'pre_removenodefeed', 'keys' => ['node_id']], ['type' => 'method', 'name' => 'removenodefeed', 'frequency' => 'once', 'method' => 'removeFeedForNode'], ['type' => 'trigger', 'name' => 'post_removenodefeed', 'keys' => ['node_id']]]];
?>
